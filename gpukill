#! /bin/bash
gpu=$(id -Gn | grep -oP 'gpu\K([0-9]+)') || { echo Sorry, you are not in any GPU group && id && exit 1; }

if ! [[ $gpu =~ ^[0-9]$ ]] ; then
          echo $gpu
  echo "error: Gpu number not an integer" >&2; exit 2
fi
echo Accessing GPU $gpu

procs=()
function getinfo()
{
        procs=()
        if ! info=$(nvidia-smi  --query-compute-apps=pid,used_memory --format=csv,noheader -i $gpu); then
          echo error: GPU $gpu not found: $info
          exit 3
        fi
        while read line ; do
                 [[ -z "${line// }" ]] && continue
                pid=$(echo $line | cut -f1 -d,)
                mem=$(echo $line | cut -f2 -d,)
                user=$(ps -o uname= -p $pid)
                ((CUT = COLUMNS - 5))
                cmd=$(ps -o command= -p $pid| tr -d '"'|cut -c -$CUT)
                procs+=("$pid")
                procs+=("$user $mem $cmd")
        done <<< $info
}

function help()
{
        echo "GPU Kill v0.1, felix.zimmermann@ptb.de, BSD 2-Clause"
        echo ""
        echo "Usage: sudo gpukill [-l| -p PID| -h]"
        echo "  Shows a menu of processes running on the gpu your user got assigned"
        echo "  Assignment is done by being a member of one of the gpu0, gpu1, etc groups"
        echo "Options:"
        echo "  l        list all processes on the assigned gpu without showing a menu"
        echo "  k PID    kills the process with id PID if its running on your gpu"
        echo ""
        echo "known Issues:"
        echo "   - User can only be assigned to one group"
        echo "   - Signal to be send is not configureable"
        echo "   - Process that got send a kill signal will still be shown on the list"
}

function list()
{
        eval `resize`
        getinfo
        echo "Running Processes:"
        echo "${procs[*]}"
}

function killpid()
{
        eval `resize`
        getinfo

        for i in "${procs[@]}"; do
        [[ $KILLED ]] && echo "Killed $PID $i" && exit;
        [[ $i == $PID ]] && kill $i && KILLED=1
        done
        echo "Error: $PID not found."
        exit 5
}

while getopts "hlk:" option; do
   case $option in
      h) # display Help
         help
         exit;;
      l) # display processes
         list
         exit;;
      k) #kill selected proicess
         PID=$OPTARG
         killpid
         exit;;
   esac
done

while :;do
        eval `resize`
        HEIGHT=$(( LINES > 50 ? 50 : LINES ))
        ((INSIDE = HEIGHT - 8))
        getinfo
        if ! choice=$(NEWT_COLORS="root=,black" whiptail --title "GPU $gpu" --menu "Choose Process to Kill" $HEIGHT $COLUMNS $INSIDE "${procs[@]}" 3>&2 2>&1 1>&3); then
                echo "bye"
                exit 0

        fi
        kill $choice #remove the echo to arm
        echo killed $choice
        sleep 0.5
done